// app/(admin)/(tabs)/setfeature_configuration.tsx
import { Alert } from 'react-native';

// Types
export type FeatureSettings = {
  // Shop Features
  shopEnabled: boolean;
  allowDirectQuantityInput: boolean;
  showStockLevels: boolean;
  lowStockWarnings: boolean;
  
  // Restock Features
  restockEnabled: boolean;
  quickRestockButtons: boolean;
  bulkRestockApply: boolean;
  restockConfirmation: boolean;
  
  // Analytics Features
  analyticsEnabled: boolean;
  pdfExport: boolean;
  performanceMetrics: boolean;
  salesCharts: boolean;
  
  // UI/UX Features
  darkMode: boolean;
  animations: boolean;
  hapticFeedback: boolean;
  soundEffects: boolean;
  
  // Security Features
  sessionTimeout: number;
  requirePasswordChange: boolean;
  loginAttemptLimit: number;

  // New Features
  reservationEnabled: boolean;
  returnsEnabled: boolean;
  monitoringEnabled: boolean;
};

export type ReservationSettings = {
  maxReservationDays: number;
  autoCancelHours: number;
  maxItemsPerReservation: number;
  allowModification: boolean;
  requireDeposit: boolean;
  depositAmount: number;
  notificationReminders: boolean;
};

export type ReturnSettings = {
  returnPeriodDays: number;
  requireReason: boolean;
  allowPartialReturns: boolean;
  autoRestockReturns: boolean;
  qualityCheckRequired: boolean;
  refundProcessingDays: number;
  damageDeductionPercent: number;
};

export type MonitoringSettings = {
  includeCharts: boolean;
  includeTables: boolean;
  includeSummary: boolean;
  autoGenerateDaily: boolean;
  autoGenerateWeekly: boolean;
  autoGenerateMonthly: boolean;
  includeLowStockAlerts: boolean;
  includePerformanceMetrics: boolean;
  includeCashierActivity: boolean;
  reportPassword: string;
  emailReports: boolean;
  emailRecipients: string;
};

export type Item = {
  key: string;
  label: string;
  image: any;
  price: number;
  stock: number;
  rejected: number;
  lowStockThreshold: number;
  enabled: boolean;
};

export type College = {
  id: string;
  name: string;
  enabled: boolean;
};

// Default configurations
export const defaultFeatures: FeatureSettings = {
  shopEnabled: true,
  allowDirectQuantityInput: true,
  showStockLevels: true,
  lowStockWarnings: true,
  restockEnabled: true,
  quickRestockButtons: true,
  bulkRestockApply: true,
  restockConfirmation: true,
  analyticsEnabled: true,
  pdfExport: true,
  performanceMetrics: true,
  salesCharts: true,
  darkMode: false,
  animations: true,
  hapticFeedback: true,
  soundEffects: false,
  sessionTimeout: 30,
  requirePasswordChange: false,
  loginAttemptLimit: 5,
  reservationEnabled: true,
  returnsEnabled: true,
  monitoringEnabled: true
};

export const defaultReservationSettings: ReservationSettings = {
  maxReservationDays: 7,
  autoCancelHours: 24,
  maxItemsPerReservation: 5,
  allowModification: true,
  requireDeposit: false,
  depositAmount: 50,
  notificationReminders: true
};

export const defaultReturnSettings: ReturnSettings = {
  returnPeriodDays: 30,
  requireReason: true,
  allowPartialReturns: true,
  autoRestockReturns: true,
  qualityCheckRequired: true,
  refundProcessingDays: 7,
  damageDeductionPercent: 20
};

export const defaultMonitoringSettings: MonitoringSettings = {
  includeCharts: true,
  includeTables: true,
  includeSummary: true,
  autoGenerateDaily: false,
  autoGenerateWeekly: true,
  autoGenerateMonthly: true,
  includeLowStockAlerts: true,
  includePerformanceMetrics: true,
  includeCashierActivity: true,
  reportPassword: '',
  emailReports: false,
  emailRecipients: ''
};

// Sample data
export const sampleItems: Item[] = [
  {
    key: "xs",
    label: "Extra Small",
    image: require('../../../assets/images/size-shirt/extra-small.png'),
    price: 299,
    stock: 15,
    rejected: 2,
    lowStockThreshold: 5,
    enabled: true
  },
  {
    key: "small",
    label: "Small",
    image: require('../../../assets/images/size-shirt/small.png'),
    price: 299,
    stock: 20,
    rejected: 1,
    lowStockThreshold: 5,
    enabled: true
  },
  {
    key: "medium",
    label: "Medium",
    image: require('../../../assets/images/size-shirt/medium.png'),
    price: 299,
    stock: 25,
    rejected: 0,
    lowStockThreshold: 5,
    enabled: true
  },
  {
    key: "large",
    label: "Large",
    image: require('../../../assets/images/size-shirt/large.png'),
    price: 299,
    stock: 18,
    rejected: 3,
    lowStockThreshold: 5,
    enabled: true
  },
  {
    key: "xl",
    label: "Extra Large",
    image: require('../../../assets/images/size-shirt/extra-large.png'),
    price: 299,
    stock: 12,
    rejected: 1,
    lowStockThreshold: 5,
    enabled: true
  },
  {
    key: "xxl",
    label: "2X Large",
    image: require('../../../assets/images/size-shirt/extra-extra-large.png'),
    price: 299,
    stock: 8,
    rejected: 2,
    lowStockThreshold: 5,
    enabled: true
  },
  {
    key: "xxxl",
    label: "3X Large",
    image: require('../../../assets/images/size-shirt/extra-extra-extra-large.png'),
    price: 299,
    stock: 3,
    rejected: 1,
    lowStockThreshold: 5,
    enabled: true
  }
];

export const sampleColleges: College[] = [
  { id: 'coe', name: 'College of Engineering', enabled: true },
  { id: 'cas', name: 'College of Arts and Sciences', enabled: true },
  { id: 'cob', name: 'College of Business', enabled: true },
  { id: 'ccje', name: 'College of Criminal Justice Education', enabled: true },
  { id: 'cte', name: 'College of Teacher Education', enabled: true },
];

export const availableImages = [
  { key: 'xs', label: 'Extra Small', image: require('../../../assets/images/size-shirt/extra-small.png') },
  { key: 'small', label: 'Small', image: require('../../../assets/images/size-shirt/small.png') },
  { key: 'medium', label: 'Medium', image: require('../../../assets/images/size-shirt/medium.png') },
  { key: 'large', label: 'Large', image: require('../../../assets/images/size-shirt/large.png') },
  { key: 'xl', label: 'Extra Large', image: require('../../../assets/images/size-shirt/extra-large.png') },
  { key: 'xxl', label: '2X Large', image: require('../../../assets/images/size-shirt/extra-extra-large.png') },
  { key: 'xxxl', label: '3X Large', image: require('../../../assets/images/size-shirt/extra-extra-extra-large.png') }
];

// Utility functions
export const getStockStatusColor = (stock: number, threshold: number) => {
  if (stock === 0) return 'bg-error';
  if (stock <= threshold) return 'bg-warning';
  return 'bg-success';
};

export const getStockStatusText = (stock: number, threshold: number) => {
  if (stock === 0) return 'Out of Stock';
  if (stock <= threshold) return 'Low Stock';
  return 'In Stock';
};

export const validateConfiguration = (sessionTimeout: string, loginAttempts: string): boolean => {
  const timeout = parseInt(sessionTimeout);
  const attempts = parseInt(loginAttempts);
  
  if (timeout < 5 || timeout > 120) {
    Alert.alert('Invalid Session Timeout', 'Session timeout must be between 5 and 120 minutes');
    return false;
  }

  if (attempts < 3 || attempts > 10) {
    Alert.alert('Invalid Login Attempts', 'Login attempt limit must be between 3 and 10');
    return false;
  }

  return true;
};

export const resetAllSettings = (
  setFeatures: React.Dispatch<React.SetStateAction<FeatureSettings>>,
  setReservationSettings: React.Dispatch<React.SetStateAction<ReservationSettings>>,
  setReturnSettings: React.Dispatch<React.SetStateAction<ReturnSettings>>,
  setMonitoringSettings: React.Dispatch<React.SetStateAction<MonitoringSettings>>,
  setItems: React.Dispatch<React.SetStateAction<Item[]>>,
  setColleges: React.Dispatch<React.SetStateAction<College[]>>,
  setSessionTimeout: React.Dispatch<React.SetStateAction<string>>,
  setLoginAttempts: React.Dispatch<React.SetStateAction<string>>
) => {
  setFeatures(defaultFeatures);
  setReservationSettings(defaultReservationSettings);
  setReturnSettings(defaultReturnSettings);
  setMonitoringSettings(defaultMonitoringSettings);
  setItems(sampleItems);
  setColleges(sampleColleges);
  setSessionTimeout('30');
  setLoginAttempts('5');
  Alert.alert('Success', 'All settings reset to default values');
};